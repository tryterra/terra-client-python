# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel


class NutritionMicros(UncheckedBaseModel):
    biotin_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Biotin content of the associated food(s).
    """

    caffeine_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Caffeine content of the associated food(s).
    """

    calcium_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Calcium content of the associated food(s).
    """

    chloride_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Chloride content of the associated food(s).
    """

    chromium_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Chromium content of the associated food(s).
    """

    copper_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Copper content of the associated food(s).
    """

    folate_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Folate content of the associated food(s).
    """

    folic_acid_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Folic Acid content of the associated food(s).
    """

    iodine_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Iodine content of the associated food(s).
    """

    iron_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Iron content of the associated food(s).
    """

    magnesium_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Magnesium content of the associated food(s).
    """

    manganese_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Manganese content of the associated food(s).
    """

    molybdenum_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Molybdenum content of the associated food(s).
    """

    niacin_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Niacin content of the associated food(s).
    """

    pantothenic_acid_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Pantothenic content of the associated food(s).
    """

    phosphorus_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Phosphorus content of the associated food(s).
    """

    potassium_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Potassium content of the associated food(s).
    """

    riboflavin_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Riboflavin content of the associated food(s).
    """

    selenium_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Selenium content of the associated food(s).
    """

    thiamin_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Thiamin content of the associated food(s).
    """

    vitamin_a_mg: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="vitamin_A_mg")] = (
        pydantic.Field(default=None)
    )
    """
    Vitamin A content of the associated food(s).
    """

    vitamin_b_12_mg: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="vitamin_B12_mg")] = (
        pydantic.Field(default=None)
    )
    """
    Vitamin B12 content of the associated food(s).
    """

    vitamin_b_6_mg: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="vitamin_B6_mg")] = (
        pydantic.Field(default=None)
    )
    """
    Vitamin B6 content of the associated food(s).
    """

    vitamin_c_mg: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="vitamin_C_mg")] = (
        pydantic.Field(default=None)
    )
    """
    Vitamin C content of the associated food(s).
    """

    vitamin_d_mg: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="vitamin_D_mg")] = (
        pydantic.Field(default=None)
    )
    """
    Vitamin D content of the associated food(s).
    """

    vitamin_d_2_mg: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="vitamin_D2_mg")] = (
        pydantic.Field(default=None)
    )
    """
    Vitamin D2 content of the associated food(s).
    """

    vitamin_d_3_mg: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="vitamin_D3_mg")] = (
        pydantic.Field(default=None)
    )
    """
    Vitamin D3 content of the associated food(s).
    """

    vitamin_e_mg: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="vitamin_E_mg")] = (
        pydantic.Field(default=None)
    )
    """
    Vitamin E content of the associated food(s).
    """

    vitamin_k_mg: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="vitamin_K_mg")] = (
        pydantic.Field(default=None)
    )
    """
    Vitamin K content of the associated food(s).
    """

    zinc_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Zinc content of the associated food(s).
    """

    cystine_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Cystine content of the associated food(s).
    """

    histidine_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Histidine content of the associated food(s).
    """

    isoleucine_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Isoleucine content of the associated food(s).
    """

    leucine_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Leucine content of the associated food(s).
    """

    lysine_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Lysine content of the associated food(s).
    """

    methionine_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Methionine content of the associated food(s).
    """

    phenylalanine_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Phenylalanine content of the associated food(s).
    """

    threonine_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Threonine content of the associated food(s).
    """

    tryptophan_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Tryptophan content of the associated food(s).
    """

    tyrosine_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Tyrosine content of the associated food(s).
    """

    valine_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Valine content of the associated food(s).
    """

    monounsaturated_fat_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Monounsaturated fat content of the associated food(s).
    """

    polyunsaturated_fat_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Polyunsaturated fat content of the associated food(s).
    """

    omega_3_g: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="omega3_g")] = pydantic.Field(
        default=None
    )
    """
    Omega3 content of the associated food(s).
    """

    omega_6_g: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="omega6_g")] = pydantic.Field(
        default=None
    )
    """
    Omega6 content of the associated food(s).
    """

    starch_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Starch content of the associated food(s).
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
