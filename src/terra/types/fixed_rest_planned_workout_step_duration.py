# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .fixed_rest_planned_workout_step_duration_duration_type import FixedRestPlannedWorkoutStepDurationDurationType


class FixedRestPlannedWorkoutStepDuration(UncheckedBaseModel):
    duration_type: typing.Optional[FixedRestPlannedWorkoutStepDurationDurationType] = pydantic.Field(default=None)
    """
    Type of condition that must be fulfilled to consider the workout step complete
    """

    rest_seconds: typing.Optional[int] = pydantic.Field(default=None)
    """
    Time duration to be elapsed for the rest period
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
