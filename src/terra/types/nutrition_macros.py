# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class NutritionMacros(UncheckedBaseModel):
    alcohol_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Alcohol content of the associated food(s).
    """

    calories: typing.Optional[float] = pydantic.Field(default=None)
    """
    Calorie content of the associated food(s).
    """

    carbohydrates_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Carbohydrates content of the associated food(s).
    """

    cholesterol_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Cholesterol content of the associated food(s).
    """

    fat_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Fat content of the associated food(s).
    """

    fiber_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Fiber content of the associated food(s).
    """

    net_carbohydrates_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Net carbs content of the associated food(s).
    """

    protein_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Protein content of the associated food(s).
    """

    saturated_fat_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Saturated fat content of the associated food(s).
    """

    sodium_mg: typing.Optional[float] = pydantic.Field(default=None)
    """
    Sodium content of the associated food(s).
    """

    sugar_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Sugar content of the associated food(s).
    """

    trans_fat_g: typing.Optional[float] = pydantic.Field(default=None)
    """
    Trans fat content of the associated food(s).
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
