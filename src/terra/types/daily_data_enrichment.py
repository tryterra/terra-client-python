# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .data_contributor import DataContributor


class DailyDataEnrichment(UncheckedBaseModel):
    cardiovascular_contributors: typing.Optional[typing.List[DataContributor]] = None
    cardiovascular_score: typing.Optional[float] = None
    immune_contributors: typing.Optional[typing.List[DataContributor]] = None
    immune_index: typing.Optional[float] = None
    readiness_contributors: typing.Optional[typing.List[DataContributor]] = None
    readiness_score: typing.Optional[float] = None
    respiratory_contributors: typing.Optional[typing.List[DataContributor]] = None
    respiratory_score: typing.Optional[float] = None
    start_time: typing.Optional[str] = None
    stress_contributors: typing.Optional[typing.List[DataContributor]] = None
    total_stress_score: typing.Optional[float] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
