# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class BadRequestErrorBody(UncheckedBaseModel):
    message: typing.Optional[str] = pydantic.Field(default=None)
    """
    a detailed message describing the error
    """

    status: typing.Optional[typing.Literal["error"]] = pydantic.Field(default=None)
    """
    indicates that an error happened (value is error)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
