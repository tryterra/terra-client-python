# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .swim_stroke_planned_workout_step_target_target_type import SwimStrokePlannedWorkoutStepTargetTargetType


class SwimStrokePlannedWorkoutStepTarget(UncheckedBaseModel):
    target_type: typing.Optional[SwimStrokePlannedWorkoutStepTargetTargetType] = pydantic.Field(default=None)
    """
    Type of target for the workout - i.e. metric type for which a criterion must be met for the workout to be completed
    """

    swim_strokes: typing.Optional[int] = pydantic.Field(default=None)
    """
    Number of swim strokes to be performed during the workout step
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
