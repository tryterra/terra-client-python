# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .calorie_sample import CalorieSample


class CaloriesData(UncheckedBaseModel):
    bmr_calories: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="BMR_calories")] = None
    calorie_samples: typing.Optional[typing.List[CalorieSample]] = None
    net_activity_calories: typing.Optional[int] = None
    net_intake_calories: typing.Optional[int] = None
    total_burned_calories: typing.Optional[int] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
