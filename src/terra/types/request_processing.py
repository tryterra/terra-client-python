# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .terra_user import TerraUser


class RequestProcessing(UncheckedBaseModel):
    retry_after_seconds: typing.Optional[float] = pydantic.Field(default=None)
    """
    Recommended time after which the request may be retried
    """

    message: typing.Optional[str] = None
    type: typing.Optional[str] = None
    user: typing.Optional[TerraUser] = pydantic.Field(default=None)
    """
    Terra User object
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
